// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SourceListItem Component should render a connected component: connected 1`] = `
<ScanListItem
  cancelScan={[Function]}
  lastRefresh={0}
  pauseScan={[Function]}
  restartScan={[Function]}
  scan={
    Object {
      "id": 42,
      "jobsTotal": 0,
      "mostRecentSysFailed": 0,
      "mostRecentSysScanned": 0,
      "name": "lorem",
      "sourcesTotal": 0,
    }
  }
  selectedScans={Array []}
  startScan={[Function]}
/>
`;

exports[`SourceListItem Component should render a non-connected component: non-connected 1`] = `
<ListViewItem
  actions={
    <Tooltip
      delayShow={500}
      id={null}
      placement="top"
      popover={null}
      rootClose={true}
      tooltip="Run Scan"
      trigger={
        Array [
          "hover",
        ]
      }
    >
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="link"
        disabled={false}
        onClick={[Function]}
      >
        <Icon
          aria-label="Start"
          name="spinner2"
          type="pf"
        />
      </Button>
      <Connect(ScanDownload)
        downloadId={3}
        pullRight={true}
        title="Download"
      />
    </Tooltip>
  }
  additionalInfo={
    Array [
      <ListStatusItem
        count={20}
        emptyText="0 Successful"
        expandType="systemsScanned"
        expanded={false}
        iconInfo={
          Object {
            "classNames": Array [],
            "name": "ok",
            "type": "pf",
          }
        }
        id="successHosts"
        tipPlural="Successful Systems"
        tipSingular="Successful System"
        toggleExpand={[Function]}
      />,
      <ListStatusItem
        count={1}
        emptyText="0 Failed"
        expandType="systemsFailed"
        expanded={false}
        iconInfo={
          Object {
            "classNames": Array [],
            "name": "error-circle-o",
            "type": "pf",
          }
        }
        id="systemsFailed"
        tipPlural="Failed Systems"
        tipSingular="Failed System"
        toggleExpand={[Function]}
      />,
      <ListStatusItem
        count={1}
        emptyText="0 Sources"
        expandType="sources"
        expanded={false}
        iconInfo={null}
        id="sources"
        tipPlural="Sources"
        tipSingular="Source"
        toggleExpand={[Function]}
      />,
      <ListStatusItem
        count={0}
        emptyText="0 Previous"
        expandType="jobs"
        expanded={false}
        iconInfo={null}
        id="scans"
        tipPlural="Previous"
        tipSingular="Previous"
        toggleExpand={[Function]}
      />,
    ]
  }
  checkboxInput={
    <Checkbox
      bsClass=""
      checked={false}
      disabled={false}
      inline={false}
      onChange={[Function]}
      title=""
    />
  }
  className="quipucords-scan-list-item list-view-pf-top-align"
  compoundExpand={true}
  compoundExpanded={false}
  description={
    <div
      className="scan-description"
    >
      <Icon
        className="scan-status-icon"
        name="ok"
        type="pf"
      />
      <div
        className="scan-status-text"
      >
        <div>
          Lorem ipsum
        </div>
        <div
          className="text-muted"
        >
          
        </div>
      </div>
    </div>
  }
  heading={null}
  hideCloseIcon={false}
  initExpanded={false}
  key="42"
  leftContent={
    <div
      className="list-item-name"
    >
      lorem
    </div>
  }
  onCloseCompoundExpand={[Function]}
  onExpand={[Function]}
  onExpandClose={[Function]}
  stacked={false}
/>
`;
