// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CredentialListItem Component should render a connected component: connected 1`] = `
<Connect(CredentialListItem)
  item={
    Object {
      "cred_type": "network",
      "id": 1,
    }
  }
/>
`;

exports[`CredentialListItem Component should render a non-connected component: non-connected 1`] = `
<CredentialListItem
  expandedCredentials={Array []}
  item={
    Object {
      "cred_type": "network",
      "id": 1,
    }
  }
  onDelete={[Function]}
  onEdit={[Function]}
  selectedCredentials={Array []}
>
  <ListViewItem
    actions={
      Array [
        <Tooltip
          content="View Credential"
          delayShow={500}
          id={null}
          isPopover={false}
          placement="top"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="link"
            disabled={false}
            onClick={[Function]}
          >
            <Icon
              name="eye"
              type="fa"
            />
          </Button>
        </Tooltip>,
        <Tooltip
          content="Delete Credential"
          delayShow={500}
          id={null}
          isPopover={false}
          placement="top"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="link"
            disabled={false}
            onClick={[Function]}
          >
            <Icon
              name="delete"
              type="pf"
            />
          </Button>
        </Tooltip>,
      ]
    }
    additionalInfo={
      Array [
        <ListViewInfoItem
          className="list-view-info-item-icon-count invisible"
          stacked={false}
        >
          <ListViewExpand
            expanded={false}
            toggleExpanded={[Function]}
          >
            <strong>
              0
            </strong>
             Sources
          </ListViewExpand>
        </ListViewInfoItem>,
      ]
    }
    checkboxInput={
      <Checkbox
        bsClass=""
        checked={false}
        disabled={false}
        inline={false}
        onChange={[Function]}
        title=""
      />
    }
    className="quipucords-credential-list-item list-view-pf-top-align"
    compoundExpand={true}
    compoundExpanded={false}
    description={
      <div
        className="quipucords-split-description"
      >
        <span
          className="quipucords-description-left"
        >
          <ListViewDescriptionHeading />
        </span>
        <span
          className="quipucords-description-right"
        >
          <Tooltip
            content="Authorization Type"
            delayShow={500}
            id={null}
            isPopover={false}
            placement="top"
          >
            Username and Password
          </Tooltip>
        </span>
      </div>
    }
    heading={null}
    hideCloseIcon={false}
    initExpanded={false}
    key="1"
    leftContent={
      <Tooltip
        content="Network"
        delayShow={500}
        id={null}
        isPopover={false}
        placement="top"
      >
        <ListViewIcon
          className=""
          name="network-range"
          size="sm"
          type="pf"
        />
      </Tooltip>
    }
    onCloseCompoundExpand={[Function]}
    onExpand={[Function]}
    onExpandClose={[Function]}
    stacked={true}
  >
    <ListViewGroupItem
      className="quipucords-credential-list-item list-view-pf-top-align"
      expanded={false}
      stacked={true}
    >
      <div
        className="list-group-item list-view-pf-stacked quipucords-credential-list-item list-view-pf-top-align"
      >
        <ListViewRow
          actions={
            Array [
              <Tooltip
                content="View Credential"
                delayShow={500}
                id={null}
                isPopover={false}
                placement="top"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="link"
                  disabled={false}
                  onClick={[Function]}
                >
                  <Icon
                    name="eye"
                    type="fa"
                  />
                </Button>
              </Tooltip>,
              <Tooltip
                content="Delete Credential"
                delayShow={500}
                id={null}
                isPopover={false}
                placement="top"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="link"
                  disabled={false}
                  onClick={[Function]}
                >
                  <Icon
                    name="delete"
                    type="pf"
                  />
                </Button>
              </Tooltip>,
            ]
          }
          additionalInfo={
            Array [
              <ListViewInfoItem
                className="list-view-info-item-icon-count invisible"
                stacked={false}
              >
                <ListViewExpand
                  expanded={false}
                  toggleExpanded={[Function]}
                >
                  <strong>
                    0
                  </strong>
                   Sources
                </ListViewExpand>
              </ListViewInfoItem>,
            ]
          }
          checkboxInput={
            <Checkbox
              bsClass=""
              checked={false}
              disabled={false}
              inline={false}
              onChange={[Function]}
              title=""
            />
          }
          description={
            <div
              className="quipucords-split-description"
            >
              <span
                className="quipucords-description-left"
              >
                <ListViewDescriptionHeading />
              </span>
              <span
                className="quipucords-description-right"
              >
                <Tooltip
                  content="Authorization Type"
                  delayShow={500}
                  id={null}
                  isPopover={false}
                  placement="top"
                >
                  Username and Password
                </Tooltip>
              </span>
            </div>
          }
          heading={null}
          leftContent={
            <Tooltip
              content="Network"
              delayShow={500}
              id={null}
              isPopover={false}
              placement="top"
            >
              <ListViewIcon
                className=""
                name="network-range"
                size="sm"
                type="pf"
              />
            </Tooltip>
          }
        >
          <ListViewCheckbox
            className=""
            key="checkbox"
          >
            <div
              className="list-view-pf-checkbox"
            >
              <Checkbox
                bsClass=""
                checked={false}
                disabled={false}
                inline={false}
                onChange={[Function]}
                title=""
              >
                <div
                  className=""
                >
                  <label
                    title=""
                  >
                    <input
                      checked={false}
                      disabled={false}
                      onChange={[Function]}
                      type="checkbox"
                    />
                  </label>
                </div>
              </Checkbox>
            </div>
          </ListViewCheckbox>
          <ListViewActions
            key="actions"
          >
            <div
              className="list-view-pf-actions"
            >
              <Tooltip
                content="View Credential"
                delayShow={500}
                id={null}
                isPopover={false}
                key="editButton"
                placement="top"
              >
                <Tooltip
                  content="View Credential"
                  entryDelay={500}
                  id="generatedid-"
                  position="top"
                >
                  <Popper
                    appendTo={[Function]}
                    distance={15}
                    enableFlip={true}
                    flipBehavior={
                      Array [
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "top",
                        "right",
                        "bottom",
                      ]
                    }
                    isVisible={false}
                    onBlur={[Function]}
                    onDocumentClick={false}
                    onDocumentKeyDown={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onPopperMouseEnter={[Function]}
                    onPopperMouseLeave={[Function]}
                    onTriggerEnter={[Function]}
                    placement="top"
                    popper={
                      <div
                        aria-live="off"
                        className="pf-c-tooltip"
                        id="generatedid-"
                        role="tooltip"
                        style={
                          Object {
                            "maxWidth": null,
                            "opacity": 0,
                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                          }
                        }
                      >
                        <TooltipArrow />
                        <TooltipContent
                          isLeftAligned={false}
                        >
                          View Credential
                        </TooltipContent>
                      </div>
                    }
                    popperMatchesTriggerWidth={false}
                    positionModifiers={
                      Object {
                        "bottom": "pf-m-bottom",
                        "bottom-end": "pf-m-bottom-right",
                        "bottom-start": "pf-m-bottom-left",
                        "left": "pf-m-left",
                        "left-end": "pf-m-left-bottom",
                        "left-start": "pf-m-left-top",
                        "right": "pf-m-right",
                        "right-end": "pf-m-right-bottom",
                        "right-start": "pf-m-right-top",
                        "top": "pf-m-top",
                        "top-end": "pf-m-top-right",
                        "top-start": "pf-m-top-left",
                      }
                    }
                    trigger={
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="link"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <Icon
                          name="eye"
                          type="fa"
                        />
                      </Button>
                    }
                    zIndex={9999}
                  >
                    <FindRefWrapper
                      onFoundRef={[Function]}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="link"
                        disabled={false}
                        key="editButton"
                        onClick={[Function]}
                      >
                        <button
                          className="btn btn-link"
                          disabled={false}
                          onClick={[Function]}
                          type="button"
                        >
                          <Icon
                            name="eye"
                            type="fa"
                          >
                            <FontAwesome
                              name="eye"
                            >
                              <span
                                aria-hidden={true}
                                className="fa fa-eye"
                              />
                            </FontAwesome>
                          </Icon>
                        </button>
                      </Button>
                    </FindRefWrapper>
                  </Popper>
                </Tooltip>
              </Tooltip>
              <Tooltip
                content="Delete Credential"
                delayShow={500}
                id={null}
                isPopover={false}
                key="deleteButton"
                placement="top"
              >
                <Tooltip
                  content="Delete Credential"
                  entryDelay={500}
                  id="generatedid-"
                  position="top"
                >
                  <Popper
                    appendTo={[Function]}
                    distance={15}
                    enableFlip={true}
                    flipBehavior={
                      Array [
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "top",
                        "right",
                        "bottom",
                      ]
                    }
                    isVisible={false}
                    onBlur={[Function]}
                    onDocumentClick={false}
                    onDocumentKeyDown={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onPopperMouseEnter={[Function]}
                    onPopperMouseLeave={[Function]}
                    onTriggerEnter={[Function]}
                    placement="top"
                    popper={
                      <div
                        aria-live="off"
                        className="pf-c-tooltip"
                        id="generatedid-"
                        role="tooltip"
                        style={
                          Object {
                            "maxWidth": null,
                            "opacity": 0,
                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                          }
                        }
                      >
                        <TooltipArrow />
                        <TooltipContent
                          isLeftAligned={false}
                        >
                          Delete Credential
                        </TooltipContent>
                      </div>
                    }
                    popperMatchesTriggerWidth={false}
                    positionModifiers={
                      Object {
                        "bottom": "pf-m-bottom",
                        "bottom-end": "pf-m-bottom-right",
                        "bottom-start": "pf-m-bottom-left",
                        "left": "pf-m-left",
                        "left-end": "pf-m-left-bottom",
                        "left-start": "pf-m-left-top",
                        "right": "pf-m-right",
                        "right-end": "pf-m-right-bottom",
                        "right-start": "pf-m-right-top",
                        "top": "pf-m-top",
                        "top-end": "pf-m-top-right",
                        "top-start": "pf-m-top-left",
                      }
                    }
                    trigger={
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="link"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <Icon
                          name="delete"
                          type="pf"
                        />
                      </Button>
                    }
                    zIndex={9999}
                  >
                    <FindRefWrapper
                      onFoundRef={[Function]}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="link"
                        disabled={false}
                        key="removeButton"
                        onClick={[Function]}
                      >
                        <button
                          className="btn btn-link"
                          disabled={false}
                          onClick={[Function]}
                          type="button"
                        >
                          <Icon
                            name="delete"
                            type="pf"
                          >
                            <PatternflyIcon
                              className=""
                              name="delete"
                            >
                              <span
                                aria-hidden="true"
                                className="pficon pficon-delete"
                              />
                            </PatternflyIcon>
                          </Icon>
                        </button>
                      </Button>
                    </FindRefWrapper>
                  </Popper>
                </Tooltip>
              </Tooltip>
            </div>
          </ListViewActions>
          <ListViewMainInfo
            key="main_info"
          >
            <div
              className="list-view-pf-main-info"
            >
              <ListViewLeft>
                <div
                  className="list-view-pf-left"
                >
                  <Tooltip
                    content="Network"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    <Tooltip
                      content="Network"
                      entryDelay={500}
                      id="generatedid-"
                      position="top"
                    >
                      <Popper
                        appendTo={[Function]}
                        distance={15}
                        enableFlip={true}
                        flipBehavior={
                          Array [
                            "top",
                            "right",
                            "bottom",
                            "left",
                            "top",
                            "right",
                            "bottom",
                          ]
                        }
                        isVisible={false}
                        onBlur={[Function]}
                        onDocumentClick={false}
                        onDocumentKeyDown={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onPopperMouseEnter={[Function]}
                        onPopperMouseLeave={[Function]}
                        onTriggerEnter={[Function]}
                        placement="top"
                        popper={
                          <div
                            aria-live="off"
                            className="pf-c-tooltip"
                            id="generatedid-"
                            role="tooltip"
                            style={
                              Object {
                                "maxWidth": null,
                                "opacity": 0,
                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                              }
                            }
                          >
                            <TooltipArrow />
                            <TooltipContent
                              isLeftAligned={false}
                            >
                              Network
                            </TooltipContent>
                          </div>
                        }
                        popperMatchesTriggerWidth={false}
                        positionModifiers={
                          Object {
                            "bottom": "pf-m-bottom",
                            "bottom-end": "pf-m-bottom-right",
                            "bottom-start": "pf-m-bottom-left",
                            "left": "pf-m-left",
                            "left-end": "pf-m-left-bottom",
                            "left-start": "pf-m-left-top",
                            "right": "pf-m-right",
                            "right-end": "pf-m-right-bottom",
                            "right-start": "pf-m-right-top",
                            "top": "pf-m-top",
                            "top-end": "pf-m-top-right",
                            "top-start": "pf-m-top-left",
                          }
                        }
                        trigger={
                          <ListViewIcon
                            className=""
                            name="network-range"
                            size="sm"
                            type="pf"
                          />
                        }
                        zIndex={9999}
                      >
                        <FindRefWrapper
                          onFoundRef={[Function]}
                        >
                          <ListViewIcon
                            className=""
                            name="network-range"
                            size="sm"
                            type="pf"
                          >
                            <Icon
                              className="list-view-pf-icon-sm"
                              name="network-range"
                              type="pf"
                            >
                              <PatternflyIcon
                                className="list-view-pf-icon-sm"
                                name="network-range"
                              >
                                <span
                                  aria-hidden="true"
                                  className="pficon pficon-network-range list-view-pf-icon-sm"
                                />
                              </PatternflyIcon>
                            </Icon>
                          </ListViewIcon>
                        </FindRefWrapper>
                      </Popper>
                    </Tooltip>
                  </Tooltip>
                </div>
              </ListViewLeft>
              <ListViewBody>
                <div
                  className="list-view-pf-body"
                >
                  <ListViewDescription>
                    <div
                      className="list-view-pf-description"
                    >
                      <ListViewDescriptionText>
                        <div
                          className="list-group-item-text"
                        >
                          <div
                            className="quipucords-split-description"
                          >
                            <span
                              className="quipucords-description-left"
                            >
                              <ListViewDescriptionHeading>
                                <div
                                  className="list-group-item-heading"
                                />
                              </ListViewDescriptionHeading>
                            </span>
                            <span
                              className="quipucords-description-right"
                            >
                              <Tooltip
                                content="Authorization Type"
                                delayShow={500}
                                id={null}
                                isPopover={false}
                                placement="top"
                              >
                                <Tooltip
                                  content="Authorization Type"
                                  entryDelay={500}
                                  id="generatedid-"
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="generatedid-"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          Authorization Type
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    trigger="Username and Password"
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      Username and Password
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </Tooltip>
                            </span>
                          </div>
                        </div>
                      </ListViewDescriptionText>
                    </div>
                  </ListViewDescription>
                  <ListViewAdditionalInfo>
                    <div
                      className="list-view-pf-additional-info"
                    >
                      <ListViewInfoItem
                        className="list-view-info-item-icon-count invisible"
                        key="sources"
                        stacked={false}
                      >
                        <div
                          className="list-view-pf-additional-info-item list-view-info-item-icon-count invisible"
                          onClick={[Function]}
                        >
                          <ListViewExpand
                            expanded={false}
                            toggleExpanded={[Function]}
                          >
                            <div
                              className="list-view-pf-expand"
                              onClick={[Function]}
                            >
                              <span
                                className="fa fa-angle-right"
                              />
                              <strong>
                                0
                              </strong>
                               Sources
                            </div>
                          </ListViewExpand>
                        </div>
                      </ListViewInfoItem>
                    </div>
                  </ListViewAdditionalInfo>
                </div>
              </ListViewBody>
            </div>
          </ListViewMainInfo>
        </ListViewRow>
      </div>
    </ListViewGroupItem>
  </ListViewItem>
</CredentialListItem>
`;
