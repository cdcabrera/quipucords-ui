// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CredentialListItem Component should render a connected component: connected 1`] = `
<CredentialListItem
  dispatch={[Function]}
  expandedCredentials={Array []}
  item={
    Object {
      "cred_type": "network",
      "id": 1,
    }
  }
  onDelete={[Function]}
  onEdit={[Function]}
  selectedCredentials={Array []}
/>
`;

exports[`CredentialListItem Component should render a non-connected component: non-connected 1`] = `
<CredentialListItem
  expandedCredentials={Array []}
  item={
    Object {
      "cred_type": "network",
      "id": 1,
    }
  }
  onDelete={[Function]}
  onEdit={[Function]}
  selectedCredentials={Array []}
>
  <ListViewItem
    actions={
      Array [
        <Tooltip
          delayShow={500}
          id={null}
          placement="top"
          popover={null}
          rootClose={true}
          tooltip="View Credential"
          trigger={
            Array [
              "hover",
            ]
          }
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="link"
            disabled={false}
            onClick={[Function]}
          >
            <Icon
              name="eye"
              type="fa"
            />
          </Button>
        </Tooltip>,
        <Tooltip
          delayShow={500}
          id={null}
          placement="top"
          popover={null}
          rootClose={true}
          tooltip="Delete Credential"
          trigger={
            Array [
              "hover",
            ]
          }
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="link"
            disabled={false}
            onClick={[Function]}
          >
            <Icon
              name="delete"
              type="pf"
            />
          </Button>
        </Tooltip>,
      ]
    }
    additionalInfo={
      Array [
        <ListViewInfoItem
          className="list-view-info-item-icon-count invisible"
          stacked={false}
        >
          <ListViewExpand
            expanded={false}
            toggleExpanded={[Function]}
          >
            <strong>
              0
            </strong>
             Sources
          </ListViewExpand>
        </ListViewInfoItem>,
      ]
    }
    checkboxInput={
      <Checkbox
        bsClass=""
        checked={false}
        disabled={false}
        inline={false}
        onChange={[Function]}
        title=""
      />
    }
    className="quipucords-credential-list-item list-view-pf-top-align"
    compoundExpand={true}
    compoundExpanded={false}
    description={
      <div
        className="quipucords-split-description"
      >
        <span
          className="quipucords-description-left"
        >
          <ListViewDescriptionHeading />
        </span>
        <span
          className="quipucords-description-right"
        >
          <Tooltip
            delayShow={500}
            id={null}
            placement="top"
            popover={null}
            rootClose={true}
            tooltip="Authorization Type"
            trigger={
              Array [
                "hover",
              ]
            }
          >
            Username and Password
          </Tooltip>
        </span>
      </div>
    }
    heading={null}
    hideCloseIcon={false}
    initExpanded={false}
    key="1"
    leftContent={
      <Tooltip
        delayShow={500}
        id={null}
        placement="top"
        popover={null}
        rootClose={true}
        tooltip="Network"
        trigger={
          Array [
            "hover",
          ]
        }
      >
        <ListViewIcon
          className=""
          name="network-range"
          size="sm"
          type="pf"
        />
      </Tooltip>
    }
    onCloseCompoundExpand={[Function]}
    onExpand={[Function]}
    onExpandClose={[Function]}
    stacked={true}
  >
    <ListViewGroupItem
      className="quipucords-credential-list-item list-view-pf-top-align"
      expanded={false}
      stacked={true}
    >
      <div
        className="list-group-item list-view-pf-stacked quipucords-credential-list-item list-view-pf-top-align"
      >
        <ListViewRow
          actions={
            Array [
              <Tooltip
                delayShow={500}
                id={null}
                placement="top"
                popover={null}
                rootClose={true}
                tooltip="View Credential"
                trigger={
                  Array [
                    "hover",
                  ]
                }
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="link"
                  disabled={false}
                  onClick={[Function]}
                >
                  <Icon
                    name="eye"
                    type="fa"
                  />
                </Button>
              </Tooltip>,
              <Tooltip
                delayShow={500}
                id={null}
                placement="top"
                popover={null}
                rootClose={true}
                tooltip="Delete Credential"
                trigger={
                  Array [
                    "hover",
                  ]
                }
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="link"
                  disabled={false}
                  onClick={[Function]}
                >
                  <Icon
                    name="delete"
                    type="pf"
                  />
                </Button>
              </Tooltip>,
            ]
          }
          additionalInfo={
            Array [
              <ListViewInfoItem
                className="list-view-info-item-icon-count invisible"
                stacked={false}
              >
                <ListViewExpand
                  expanded={false}
                  toggleExpanded={[Function]}
                >
                  <strong>
                    0
                  </strong>
                   Sources
                </ListViewExpand>
              </ListViewInfoItem>,
            ]
          }
          checkboxInput={
            <Checkbox
              bsClass=""
              checked={false}
              disabled={false}
              inline={false}
              onChange={[Function]}
              title=""
            />
          }
          description={
            <div
              className="quipucords-split-description"
            >
              <span
                className="quipucords-description-left"
              >
                <ListViewDescriptionHeading />
              </span>
              <span
                className="quipucords-description-right"
              >
                <Tooltip
                  delayShow={500}
                  id={null}
                  placement="top"
                  popover={null}
                  rootClose={true}
                  tooltip="Authorization Type"
                  trigger={
                    Array [
                      "hover",
                    ]
                  }
                >
                  Username and Password
                </Tooltip>
              </span>
            </div>
          }
          heading={null}
          leftContent={
            <Tooltip
              delayShow={500}
              id={null}
              placement="top"
              popover={null}
              rootClose={true}
              tooltip="Network"
              trigger={
                Array [
                  "hover",
                ]
              }
            >
              <ListViewIcon
                className=""
                name="network-range"
                size="sm"
                type="pf"
              />
            </Tooltip>
          }
        >
          <ListViewCheckbox
            className=""
            key="checkbox"
          >
            <div
              className="list-view-pf-checkbox"
            >
              <Checkbox
                bsClass=""
                checked={false}
                disabled={false}
                inline={false}
                onChange={[Function]}
                title=""
              >
                <div
                  className=""
                >
                  <label
                    title=""
                  >
                    <input
                      checked={false}
                      disabled={false}
                      onChange={[Function]}
                      type="checkbox"
                    />
                  </label>
                </div>
              </Checkbox>
            </div>
          </ListViewCheckbox>
          <ListViewActions
            key="actions"
          >
            <div
              className="list-view-pf-actions"
            >
              <Tooltip
                delayShow={500}
                id={null}
                key="editButton"
                placement="top"
                popover={null}
                rootClose={true}
                tooltip="View Credential"
                trigger={
                  Array [
                    "hover",
                  ]
                }
              >
                <OverlayTrigger
                  defaultOverlayShown={false}
                  delayShow={500}
                  overlay={
                    <Tooltip
                      bsClass="tooltip"
                      id="generatedid-"
                      placement="right"
                    >
                      View Credential
                    </Tooltip>
                  }
                  placement="top"
                  rootClose={true}
                  trigger={
                    Array [
                      "hover",
                    ]
                  }
                >
                  <span
                    onClick={null}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      key="editButton"
                      onClick={[Function]}
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="eye"
                          type="fa"
                        >
                          <FontAwesome
                            name="eye"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-eye"
                            />
                          </FontAwesome>
                        </Icon>
                      </button>
                    </Button>
                  </span>
                </OverlayTrigger>
              </Tooltip>
              <Tooltip
                delayShow={500}
                id={null}
                key="deleteButton"
                placement="top"
                popover={null}
                rootClose={true}
                tooltip="Delete Credential"
                trigger={
                  Array [
                    "hover",
                  ]
                }
              >
                <OverlayTrigger
                  defaultOverlayShown={false}
                  delayShow={500}
                  overlay={
                    <Tooltip
                      bsClass="tooltip"
                      id="generatedid-"
                      placement="right"
                    >
                      Delete Credential
                    </Tooltip>
                  }
                  placement="top"
                  rootClose={true}
                  trigger={
                    Array [
                      "hover",
                    ]
                  }
                >
                  <span
                    onClick={null}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      key="removeButton"
                      onClick={[Function]}
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="delete"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="delete"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-delete"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </span>
                </OverlayTrigger>
              </Tooltip>
            </div>
          </ListViewActions>
          <ListViewMainInfo
            key="main_info"
          >
            <div
              className="list-view-pf-main-info"
            >
              <ListViewLeft>
                <div
                  className="list-view-pf-left"
                >
                  <Tooltip
                    delayShow={500}
                    id={null}
                    placement="top"
                    popover={null}
                    rootClose={true}
                    tooltip="Network"
                    trigger={
                      Array [
                        "hover",
                      ]
                    }
                  >
                    <OverlayTrigger
                      defaultOverlayShown={false}
                      delayShow={500}
                      overlay={
                        <Tooltip
                          bsClass="tooltip"
                          id="generatedid-"
                          placement="right"
                        >
                          Network
                        </Tooltip>
                      }
                      placement="top"
                      rootClose={true}
                      trigger={
                        Array [
                          "hover",
                        ]
                      }
                    >
                      <span
                        onClick={null}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <ListViewIcon
                          className=""
                          name="network-range"
                          size="sm"
                          type="pf"
                        >
                          <Icon
                            className="list-view-pf-icon-sm"
                            name="network-range"
                            type="pf"
                          >
                            <PatternflyIcon
                              className="list-view-pf-icon-sm"
                              name="network-range"
                            >
                              <span
                                aria-hidden="true"
                                className="pficon pficon-network-range list-view-pf-icon-sm"
                              />
                            </PatternflyIcon>
                          </Icon>
                        </ListViewIcon>
                      </span>
                    </OverlayTrigger>
                  </Tooltip>
                </div>
              </ListViewLeft>
              <ListViewBody>
                <div
                  className="list-view-pf-body"
                >
                  <ListViewDescription>
                    <div
                      className="list-view-pf-description"
                    >
                      <ListViewDescriptionText>
                        <div
                          className="list-group-item-text"
                        >
                          <div
                            className="quipucords-split-description"
                          >
                            <span
                              className="quipucords-description-left"
                            >
                              <ListViewDescriptionHeading>
                                <div
                                  className="list-group-item-heading"
                                />
                              </ListViewDescriptionHeading>
                            </span>
                            <span
                              className="quipucords-description-right"
                            >
                              <Tooltip
                                delayShow={500}
                                id={null}
                                placement="top"
                                popover={null}
                                rootClose={true}
                                tooltip="Authorization Type"
                                trigger={
                                  Array [
                                    "hover",
                                  ]
                                }
                              >
                                <OverlayTrigger
                                  defaultOverlayShown={false}
                                  delayShow={500}
                                  overlay={
                                    <Tooltip
                                      bsClass="tooltip"
                                      id="generatedid-"
                                      placement="right"
                                    >
                                      Authorization Type
                                    </Tooltip>
                                  }
                                  placement="top"
                                  rootClose={true}
                                  trigger={
                                    Array [
                                      "hover",
                                    ]
                                  }
                                >
                                  <span
                                    onClick={null}
                                    onMouseOut={[Function]}
                                    onMouseOver={[Function]}
                                  >
                                    Username and Password
                                  </span>
                                </OverlayTrigger>
                              </Tooltip>
                            </span>
                          </div>
                        </div>
                      </ListViewDescriptionText>
                    </div>
                  </ListViewDescription>
                  <ListViewAdditionalInfo>
                    <div
                      className="list-view-pf-additional-info"
                    >
                      <ListViewInfoItem
                        className="list-view-info-item-icon-count invisible"
                        key="sources"
                        stacked={false}
                      >
                        <div
                          className="list-view-pf-additional-info-item list-view-info-item-icon-count invisible"
                          onClick={[Function]}
                        >
                          <ListViewExpand
                            expanded={false}
                            toggleExpanded={[Function]}
                          >
                            <div
                              className="list-view-pf-expand"
                              onClick={[Function]}
                            >
                              <span
                                className="fa fa-angle-right"
                              />
                              <strong>
                                0
                              </strong>
                               Sources
                            </div>
                          </ListViewExpand>
                        </div>
                      </ListViewInfoItem>
                    </div>
                  </ListViewAdditionalInfo>
                </div>
              </ListViewBody>
            </div>
          </ListViewMainInfo>
        </ListViewRow>
      </div>
    </ListViewGroupItem>
  </ListViewItem>
</CredentialListItem>
`;
