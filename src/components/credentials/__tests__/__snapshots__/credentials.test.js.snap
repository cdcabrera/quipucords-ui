// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Credentials Component should handle multiple display states, pending, error, fulfilled: error 1`] = `
<EmptyState
  className="quipucords-empty-state__alert"
>
  <Alert
    title="t(view.error, {\\"context\\":\\"credentials\\"})"
    variant="danger"
  >
    t(view.error-message, {"context":"credentials"})
  </Alert>
</EmptyState>
`;

exports[`Credentials Component should handle multiple display states, pending, error, fulfilled: fulfilled 1`] = `
<div
  className="quipucords-content"
>
  <div
    className="quipucords-view-container"
  >
    <ViewToolbar
      actions={
        <React.Fragment>
          <AddCredentialType
            buttonVariant="primary"
            options={
              Array [
                Object {
                  "title": [Function],
                  "value": "network",
                },
                Object {
                  "title": [Function],
                  "value": "satellite",
                },
                Object {
                  "title": [Function],
                  "value": "vcenter",
                },
              ]
            }
            placeholder="t(form-dialog.label, {\\"context\\":\\"add\\"})"
            position="right"
            t={[Function]}
            useOnSelect={[Function]}
          />
           
          <Button
            isDisabled={true}
            onClick={[Function]}
            variant="secondary"
          >
            t(form-dialog.label, {"context":"delete"})
          </Button>
        </React.Fragment>
      }
      activeFilters={Array []}
      filterFields={
        Array [
          Object {
            "filterType": "text",
            "id": "search_by_name",
            "placeholder": "Filter by Name",
            "title": "Name",
          },
          Object {
            "filterType": "select",
            "filterValues": Array [
              Object {
                "id": "network",
                "title": "Network",
              },
              Object {
                "id": "satellite",
                "title": "Satellite",
              },
              Object {
                "id": "vcenter",
                "title": "VCenter",
              },
            ],
            "id": "cred_type",
            "placeholder": "Filter by Credential Type",
            "title": "Credential Type",
          },
        ]
      }
      filterType={Object {}}
      filterValue=""
      itemsType="Credential"
      itemsTypePlural="Credentials"
      lastRefresh={NaN}
      onRefresh={[Function]}
      selectedCount={0}
      sortAscending={true}
      sortFields={
        Array [
          Object {
            "id": "name",
            "isNumeric": false,
            "title": "Name",
          },
          Object {
            "id": "cred_type",
            "isNumeric": false,
            "title": "Credential Type",
          },
        ]
      }
      sortType={Object {}}
      totalCount={0}
      viewType="CREDENTIALS_VIEW"
    />
    <ViewPaginationRow
      currentPage={0}
      pageSize={0}
      totalCount={0}
      viewType="CREDENTIALS_VIEW"
    />
    <div
      className="quipucords-list-container"
    >
      <Table
        ariaLabel={null}
        className=""
        columnHeaders={Array []}
        componentClassNames={
          Object {
            "table": "quipucords-table",
            "td": "quipucords-table__td",
            "tdAction": "quipucords-table__td-action",
            "tdExpand": "quipucords-table__td-expand",
            "tdExpanded": "quipucords-table__td-expand-expanded",
            "tdExpandedContent": "quipucords-table__td-expand-content",
            "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
            "tdSelect": "quipucords-table__td-select",
            "th": "quipucords-table__th",
            "tr": "quipucords-table__tr",
            "trExpand": "quipucords-table__tr-expand",
            "trExpanded": "quipucords-table__tr-expand-expanded",
            "trExpandedContent": "quipucords-table__tr-expand-content",
          }
        }
        isBorders={true}
        isHeader={false}
        onExpand={[Function]}
        onSelect={[Function]}
        onSort={null}
        rows={
          Array [
            Object {
              "cells": Array [
                Object {
                  "content": <Grid
                    hasGutter={false}
                  >
                    <GridItem
                      sm={2}
                    >
                      <Tooltip
                        content="t(table.label, {\\"context\\":\\"\\"})"
                        delayShow={500}
                        id={null}
                        isPopover={false}
                        placement="top"
                      >
                        <ContextIcon
                          size="sm"
                          symbol={null}
                        />
                      </Tooltip>
                    </GridItem>
                    <GridItem
                      sm={10}
                    >
                      <div>
                        <strong>
                          lorem
                        </strong>
                      </div>
                    </GridItem>
                  </Grid>,
                  "dataLabel": "t(table.header, {\\"context\\":\\"description\\"})",
                  "width": 35,
                },
                Object {
                  "content": <Tooltip
                    content="t(table.label_auth_tooltip, {\\"context\\":\\"credentials\\"})"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    t(table.label_auth_cell_sshKey, {"context":"credentials"})
                  </Tooltip>,
                  "dataLabel": "t(table.header, {\\"context\\":\\"auth-type\\"})",
                },
                Object {
                  "content": <Tooltip
                    content="t(table.label_status_tooltip_sources, {\\"context\\":\\"credentials\\",\\"count\\":0})"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    t(table.label_status_cell, {"context":"credentials","count":0}, [object Object],[object Object])
                  </Tooltip>,
                  "dataLabel": "t(table.header, {\\"context\\":\\"sources\\"})",
                  "expandedContent": undefined,
                  "isExpanded": false,
                  "width": 8,
                },
                Object {
                  "content": <OverflowMenu
                    breakpoint="lg"
                  >
                    <OverflowMenuContent>
                      <OverflowMenuGroup
                        groupType="button"
                      >
                        <OverflowMenuItem>
                          <Tooltip
                            content="t(table.label, {\\"context\\":\\"view\\"})"
                            delayShow={500}
                            id={null}
                            isPopover={false}
                            placement="top"
                          >
                            <Button
                              aria-label="t(table.label, {\\"context\\":\\"view\\"})"
                              className="quipucords-view__row-button"
                              onClick={[Function]}
                              variant="plain"
                            >
                              <EyeIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                            </Button>
                          </Tooltip>
                        </OverflowMenuItem>
                        <OverflowMenuItem>
                          <Tooltip
                            content="t(table.label, {\\"context\\":\\"delete\\"})"
                            delayShow={500}
                            id={null}
                            isPopover={false}
                            placement="top"
                          >
                            <Button
                              aria-label="t(table.label, {\\"context\\":\\"delete\\"})"
                              className="quipucords-view__row-button"
                              onClick={[Function]}
                              variant="plain"
                            >
                              <TrashIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                            </Button>
                          </Tooltip>
                        </OverflowMenuItem>
                      </OverflowMenuGroup>
                    </OverflowMenuContent>
                    <OverflowMenuControl>
                      <DropdownSelect
                        ariaLabel="Select option"
                        buttonVariant="plain"
                        className=""
                        direction="down"
                        id="generatedid-"
                        isDisabled={false}
                        isDropdownButton={true}
                        isInline={true}
                        isToggleText={true}
                        maxHeight={null}
                        name={null}
                        onSelect={[Function]}
                        options={
                          Array [
                            Object {
                              "title": "t(table.label, {\\"context\\":\\"edit\\"})",
                              "value": "edit",
                            },
                            Object {
                              "title": "t(table.label, {\\"context\\":\\"delete\\"})",
                              "value": "delete",
                            },
                          ]
                        }
                        placeholder={
                          <EllipsisVIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          />
                        }
                        position="right"
                        selectedOptions={null}
                        splitButtonVariant={null}
                        toggleIcon={null}
                        variant="single"
                      />
                    </OverflowMenuControl>
                  </OverflowMenu>,
                  "isActionCell": true,
                  "style": Object {
                    "textAlign": "right",
                  },
                },
              ],
              "isSelected": false,
              "item": Object {
                "id": "1",
                "name": "lorem",
              },
            },
          ]
        }
        summary={null}
        variant="compact"
      >
        <CredentialsEmptyState
          onAddSource={[Function]}
          t={[Function]}
          uiSentenceStartName="The Quipucords tool"
          uiShortName="Quipucords"
          viewId="credentials"
        />
      </Table>
    </div>
  </div>
</div>
`;

exports[`Credentials Component should handle multiple display states, pending, error, fulfilled: pending 1`] = `
<Modal
  aria-label={null}
  backdrop={false}
  className={null}
  disableFocusTrap={true}
  footer={null}
  header={null}
  isContentOnly={false}
  isOpen={true}
  position="top"
  positionOffset="5%"
  showClose={false}
  t={[Function]}
  variant="medium"
>
  <Spinner
    isSVG={true}
    size="lg"
  />
  <div
    className="text-center"
  >
    t(view.loading, {"context":"credentials"})
  </div>
</Modal>
`;

exports[`Credentials Component should render a basic component: basic 1`] = `
<div
  className="quipucords-content"
>
  <div
    className="quipucords-view-container"
  >
    <div
      className="quipucords-list-container"
    >
      <Table
        ariaLabel={null}
        className=""
        columnHeaders={Array []}
        componentClassNames={
          Object {
            "table": "quipucords-table",
            "td": "quipucords-table__td",
            "tdAction": "quipucords-table__td-action",
            "tdExpand": "quipucords-table__td-expand",
            "tdExpanded": "quipucords-table__td-expand-expanded",
            "tdExpandedContent": "quipucords-table__td-expand-content",
            "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
            "tdSelect": "quipucords-table__td-select",
            "th": "quipucords-table__th",
            "tr": "quipucords-table__tr",
            "trExpand": "quipucords-table__tr-expand",
            "trExpanded": "quipucords-table__tr-expand-expanded",
            "trExpandedContent": "quipucords-table__tr-expand-content",
          }
        }
        isBorders={true}
        isHeader={false}
        onExpand={[Function]}
        onSelect={[Function]}
        onSort={null}
        rows={Array []}
        summary={null}
        variant="compact"
      >
        <CredentialsEmptyState
          onAddSource={[Function]}
          t={[Function]}
          uiSentenceStartName="The Quipucords tool"
          uiShortName="Quipucords"
          viewId="credentials"
        />
      </Table>
    </div>
  </div>
</div>
`;

exports[`Credentials Component should return an empty state when there are no credentials: empty state 1`] = `
<div
  class="quipucords-content"
>
  <div
    class="quipucords-view-container"
  >
    <div
      class="quipucords-list-container"
    >
      <div
        class="pf-l-grid"
      >
        <div
          class="pf-l-grid__item pf-m-12-col"
        >
          <div
            class="pf-c-empty-state pf-m-lg quipucords-empty-state"
          >
            <div
              class="pf-c-empty-state__content"
            >
              <svg
                aria-hidden="true"
                class="pf-c-empty-state__icon"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align:-0.125em"
                viewBox="0 0 1024 1024"
                width="1em"
              >
                <path
                  d="M576,303 C576,294.715729 569.284271,288 561,288 L463,288 C454.715729,288 448,294.715729 448,303 L448,448 L303,448 C294.715729,448 288,454.715729 288,463 L288,561 C288,569.284271 294.715729,576 303,576 L448,576 L448,720.9 C447.983373,729.207373 454.6927,735.961429 463,736 L561,736 C569.3073,735.961429 576.016627,729.207373 576,720.9 L576,576 L721,576 C724.969024,576.026638 728.784638,574.468589 731.600595,571.671405 C734.416553,568.87422 736.000031,565.069113 736.000031,561.1 L736.000031,463.1 C736.016627,454.792627 729.3073,448.038571 721,448 L576,448 L576,303 Z M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 Z M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0 Z"
                />
              </svg>
              <h1
                class="pf-c-title pf-m-2xl"
                data-ouia-component-id="OUIA-Generated-Title-1"
                data-ouia-component-type="PF4/Title"
                data-ouia-safe="true"
              >
                t(view.empty-state, {"context":"title","name":"Quipucords"})
              </h1>
              <div
                class="pf-c-empty-state__body"
              >
                t(view.empty-state_description, {"context":"credentials","name":"The Quipucords tool"})
              </div>
              <div
                class="pf-c-empty-state__primary"
              >
                <div
                  class="quipucords-select quipucords-select__inline"
                >
                  <div>
                    <div
                      class="pf-c-dropdown"
                      data-ouia-component-id="OUIA-Generated-Dropdown-1"
                      data-ouia-component-type="PF4/Dropdown"
                      data-ouia-safe="true"
                      togglevariant="primary"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="true"
                        class="pf-c-dropdown__toggle pf-m-primary"
                        data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                        data-ouia-component-type="PF4/DropdownToggle"
                        data-ouia-safe="true"
                        id="pf-dropdown-toggle-id-0"
                        type="button"
                      >
                        <span
                          class="pf-c-dropdown__toggle-text"
                        >
                          t(form-dialog.label_placeholder, {"context":"add-credential"})
                        </span>
                        <span
                          class="pf-c-dropdown__toggle-icon"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align:-0.125em"
                            viewBox="0 0 320 512"
                            width="1em"
                          >
                            <path
                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                            />
                          </svg>
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <div
                class="pf-c-empty-state__secondary"
              >
                <button
                  aria-disabled="false"
                  class="pf-c-button pf-m-link"
                  data-ouia-component-id="OUIA-Generated-Button-link-1"
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  t(view.empty-state_label, {"context":"sources"})
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
