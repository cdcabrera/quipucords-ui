// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router Component should shallow render a basic component 1`] = `
<ContextProvider
  value={
    Object {
      "useLocation": [Function],
      "useNavigate": [Function],
      "useParams": [Function],
    }
  }
>
  <Routes
    basename="/client"
  >
    <Route
      element={
        <Context.Provider
          value={
            Object {
              "initialQuery": Object {
                "ordering": "name",
                "page": 1,
                "page_size": 10,
              },
              "viewId": "sources",
            }
          }
        >
          <Sources
            t={[Function]}
            useDispatch={[Function]}
            useGetSources={[Function]}
            useOnDelete={[Function]}
            useOnEdit={[Function]}
            useOnExpand={[Function]}
            useOnRefresh={[Function]}
            useOnScan={[Function]}
            useOnSelect={[Function]}
            useOnShowAddSourceWizard={[Function]}
            useSelectors={[Function]}
            useView={[Function]}
          />
        </Context.Provider>
      }
      key="/sources"
      path="/sources"
    />
    <Route
      element={
        <Context.Provider
          value={
            Object {
              "initialQuery": Object {
                "ordering": "name",
                "page": 1,
                "page_size": 10,
                "scan_type": "inspect",
              },
              "viewId": "scans",
            }
          }
        >
          <Scans
            t={[Function]}
            useDispatch={[Function]}
            useGetScans={[Function]}
            useOnExpand={[Function]}
            useOnRefresh={[Function]}
            useOnScanAction={[Function]}
            useOnSelect={[Function]}
            useSelectors={[Function]}
            useView={[Function]}
          />
        </Context.Provider>
      }
      key="/scans"
      path="/scans"
    />
    <Route
      element={
        <Context.Provider
          value={
            Object {
              "initialQuery": Object {
                "ordering": "name",
                "page": 1,
                "page_size": 10,
              },
              "viewId": "credentials",
            }
          }
        >
          <Credentials
            t={[Function]}
            useDispatch={[Function]}
            useGetCredentials={[Function]}
            useOnDelete={[Function]}
            useOnEdit={[Function]}
            useOnExpand={[Function]}
            useOnRefresh={[Function]}
            useOnSelect={[Function]}
            useOnShowAddSourceWizard={[Function]}
            useSelectors={[Function]}
            useView={[Function]}
          />
        </Context.Provider>
      }
      key="/credentials"
      path="/credentials"
    />
    <Route
      element={
        <Navigate
          replace={true}
          to="/sources"
        />
      }
      key="redirect"
      path="*"
    />
  </Routes>
</ContextProvider>
`;
