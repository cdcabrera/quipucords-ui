// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ViewToolbar Component should handle displaying secondary components, fields: secondary 1`] = `
<React.Fragment>
  <Toolbar
    className="quipucords-toolbar"
    clearAllFilters={[Function]}
    clearFiltersButtonText="t(toolbar.label, {"context":"clear-filters"})"
    collapseListedFiltersBreakpoint="lg"
  >
    <ToolbarContent
      isExpanded={false}
      showClearFiltersButton={false}
    >
      <ToolbarToggleGroup
        breakpoint="lg"
        toggleIcon={<FilterIcon />}
      >
        <ForwardRef
          variant="filter-group"
        >
          <ToolbarFilter
            categoryName="t(toolbar.label_option, {"context":"search_by_name"})"
            chips={[]}
            deleteChip={[Function]}
            showToolbarItem={true}
          >
            <SearchName />
          </ToolbarFilter>
        </ForwardRef>
      </ToolbarToggleGroup>
      <ToolbarItem
        variant="separator"
      />
      <ToolbarItem
        spacer={
          {
            "default": "spacerSm",
          }
        }
      >
        <ViewToolbarFieldSort
          t={[Function]}
          useOnSelect={[Function]}
          useView={[Function]}
        />
      </ToolbarItem>
      <ToolbarItem
        variant="separator"
      />
      <ToolbarItem>
        <RefreshTimeButton
          lastRefresh={0}
          onRefresh={[Function]}
          t={[Function]}
        />
      </ToolbarItem>
      <ForwardRef
        align={
          {
            "lg": "alignRight",
            "md": "alignLeft",
          }
        }
        spacer={
          {
            "default": "spacerSm",
          }
        }
      >
        <ToolbarItem>
          <React.Fragment>
            dolor sit
          </React.Fragment>
        </ToolbarItem>
      </ForwardRef>
    </ToolbarContent>
  </Toolbar>
  <Divider />
</React.Fragment>
`;

exports[`ViewToolbar Component should handle updating toolbar chips: chips 1`] = `NodeList []`;

exports[`ViewToolbar Component should hide categories when a single filter is available: single filter 1`] = `
NodeList [
  <input
    aria-invalid="false"
    aria-label="t(toolbar.label_placeholder_filter, {"context":"search_by_name"})"
    data-ouia-component-id="toolbar_search_name"
    data-ouia-component-type="PF5/TextInput"
    data-ouia-safe="true"
    id="generatedid-"
    maxlength="255"
    name="generatedid-"
    placeholder="t(toolbar.label_placeholder_filter, {"context":"search_by_name"})"
    type="text"
    value=""
  />,
]
`;

exports[`ViewToolbar Component should render a basic component: basic 1`] = `
<React.Fragment>
  <Toolbar
    className="quipucords-toolbar"
    clearAllFilters={[Function]}
    clearFiltersButtonText="t(toolbar.label, {"context":"clear-filters"})"
    collapseListedFiltersBreakpoint="lg"
  >
    <ToolbarContent
      isExpanded={false}
      showClearFiltersButton={false}
    >
      <ToolbarToggleGroup
        breakpoint="lg"
        toggleIcon={<FilterIcon />}
      >
        <ForwardRef
          variant="filter-group"
        >
          <ToolbarItem>
            <ViewToolbarSelectCategory
              t={[Function]}
              useOnSelect={[Function]}
              useSelector={[Function]}
              useView={[Function]}
            />
          </ToolbarItem>
          <ToolbarFilter
            categoryName="t(toolbar.label_option, {"context":"search_by_name"})"
            chips={[]}
            deleteChip={[Function]}
            showToolbarItem={false}
          >
            <SearchName />
          </ToolbarFilter>
          <ToolbarFilter
            categoryName="t(toolbar.label_option, {"context":"search_credentials_by_name"})"
            chips={[]}
            deleteChip={[Function]}
            showToolbarItem={false}
          >
            <SearchCredentialsName />
          </ToolbarFilter>
          <ToolbarFilter
            categoryName="t(toolbar.label_option, {"context":"source_type"})"
            chips={[]}
            deleteChip={[Function]}
            showToolbarItem={false}
          >
            <SourceType />
          </ToolbarFilter>
        </ForwardRef>
      </ToolbarToggleGroup>
      <ToolbarItem
        variant="separator"
      />
      <ToolbarItem
        spacer={
          {
            "default": "spacerSm",
          }
        }
      >
        <ViewToolbarFieldSort
          t={[Function]}
          useOnSelect={[Function]}
          useView={[Function]}
        />
      </ToolbarItem>
      <ToolbarItem
        variant="separator"
      />
      <ToolbarItem>
        <RefreshTimeButton
          lastRefresh={0}
          onRefresh={[Function]}
          t={[Function]}
        />
      </ToolbarItem>
      <ForwardRef
        align={
          {
            "lg": "alignRight",
            "md": "alignLeft",
          }
        }
        spacer={
          {
            "default": "spacerSm",
          }
        }
      />
    </ToolbarContent>
  </Toolbar>
  <Divider />
</React.Fragment>
`;
